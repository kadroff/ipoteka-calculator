{"version":3,"sources":["utils.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["PaymentTitle","props","paymentTitle","credit","immovables","react_default","a","createElement","IMMOVABLES_START_LIMITS","IMMOVABLES_END_LIMITS","CREDIT_START_LIMITS","CREDIT_END_LIMITS","INCOME_START_LIMITS","INCOME_END_LIMITS","App","_useState","useState","amount","percent","time","year","month","income","startAmount","endAmount","loanAmount","resultPayment","repaymentAmount","earn","_useState2","Object","slicedToArray","values","setValues","_useState3","_useState4","endPayment","setEndPayment","_useState5","_useState6","startPayment","setStartPayment","_useState7","_useState8","startTime","setStartTime","_useState9","_useState10","endTime","setEndTime","_useState11","_useState12","payment","setPayment","round","v","r","res","Math","fix","toString","split","length","toFixed","resultCalculate","name","percentMonth","paym","pow","objectSpread","handleRangeChange","value","defineProperty","handleInputChange","e","target","actualTime","ceil","CalculatorApp","Calculator","SelectCalculate","SelectInput","type","onClick","InputTitle","utils_PaymentTitle","WrapperInput","js_default","maxValue","minValue","formatLabel","concat","toLocaleString","step","onChangeComplete","difference","onChange","PaymentInput","style","width","marginLeft","WrapperSelect","SelectTime","id","checked","htmlFor","Result","ResultTitle","ResultParagraph","fontWeight","color","styled","div","_templateObject","_templateObject2","input","_templateObject3","_templateObject4","label","_templateObject5","_templateObject6","p","_templateObject7","_templateObject8","_templateObject9","ul","_templateObject10","_templateObject11","_templateObject12","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0c4c5dc.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const PaymentTitle = props => {\n  let paymentTitle = \"\";\n  if (props.credit === true) {\n    paymentTitle += \"Размер кредита\";\n  } else if (props.immovables === true) {\n    paymentTitle += \"Стоимость недвижимости\";\n  } else paymentTitle += \"Размер дохода\";\n  return <p>{paymentTitle}</p>;\n};\n","export const IMMOVABLES_START_LIMITS = 500000;\nexport const IMMOVABLES_END_LIMITS = 50000000;\n\nexport const CREDIT_START_LIMITS = 300000;\nexport const CREDIT_END_LIMITS = 20000000;\n\nexport const INCOME_START_LIMITS = 20000;\nexport const INCOME_END_LIMITS = 500000;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"react-input-range/lib/css/index.css\";\nimport styled from \"styled-components\";\nimport InputRange from \"react-input-range\";\nimport { PaymentTitle } from \"./utils.js\";\nimport {\n  IMMOVABLES_START_LIMITS,\n  IMMOVABLES_END_LIMITS,\n  CREDIT_START_LIMITS,\n  CREDIT_END_LIMITS,\n  INCOME_START_LIMITS,\n  INCOME_END_LIMITS\n} from \"./constants.js\";\n\nfunction App() {\n  const [values, setValues] = useState({\n    amount: 500000,\n    percent: 9,\n    time: 60,\n    year: false,\n    month: true,\n    immovables: true,\n    credit: false,\n    income: false,\n    startAmount: 500000,\n    endAmount: 50000000,\n    loanAmount: 0,\n    resultPayment: 0,\n    repaymentAmount: 0,\n    earn: 0\n  });\n\n  const [endPayment, setEndPayment] = useState(200000);\n  const [startPayment, setStartPayment] = useState(0);\n  const [startTime, setStartTime] = useState(12);\n  const [endTime, setEndTime] = useState(360);\n  const [payment, setPayment] = useState(200000);\n\n  const round = (v, r) => {\n    const res = Math.round(v / r) * r;\n    const fix =\n      r.toString().split(\".\").length > 1\n        ? r.toString().split(\".\")[1].length\n        : 0;\n    return res.toFixed(fix) * 1;\n  };\n\n  const resultCalculate = name => {\n    let loanAmount;\n    if (values.immovables === true) {\n      loanAmount = values.amount - payment;\n    } else if (values.credit === true) {\n      loanAmount = values.amount;\n    } else {\n      loanAmount = values.amount - payment;\n    }\n    const percentMonth = values.percent / 1200;\n    const paym = round(\n      loanAmount *\n        (percentMonth +\n          percentMonth / (Math.pow(1 + percentMonth, values.time) - 1)),\n      1\n    );\n    const repaymentAmount = paym * values.time;\n    const earn = round(paym * 2, 1);\n    setValues({\n      ...values,\n      loanAmount: loanAmount,\n      resultPayment: paym,\n      repaymentAmount: repaymentAmount,\n      earn: earn\n    });\n  };\n\n  const rangeLimits = () => {\n    // Расчет первоначального взноса при изменении стоимости недвижимости\n    if (values.amount > 20000000) {\n      const difference = Math.round(values.amount - 20000000);\n      setStartPayment(difference);\n      setPayment(difference);\n    } else if (values.amount < 20000000) {\n      setStartPayment(0);\n    }\n\n    if (values.amount < 1700000) {\n      const difference = Math.round(values.amount - 300000);\n      setEndPayment(difference);\n    } else {\n      const difference = Math.round((values.amount * 80) / 100);\n      setEndPayment(difference);\n    }\n    resultCalculate();\n  };\n  const handleRangeChange = (name, value) => {\n    if (name === \"payment\") {\n      setPayment(value);\n    }\n    setValues({ ...values, [name]: value });\n  };\n\n  const handleInputChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n    if (e.target.value !== \"month\" && e.target.value !== \"year\") {\n      setValues({ ...values, [name]: value });\n    }\n\n    if (name === \"payment\") {\n      setPayment(value);\n    }\n\n    if (e.target.value === \"year\") {\n      const actualTime = Math.ceil(values.time / 12);\n      setValues({\n        ...values,\n        year: true,\n        month: false,\n        time: actualTime\n      });\n      setStartTime(1);\n      setEndTime(30);\n    }\n\n    if (e.target.value === \"month\") {\n      const actualTime = values.time * 12;\n      setValues({\n        ...values,\n        year: false,\n        month: true,\n        time: actualTime\n      });\n      setStartTime(12);\n      setEndTime(360);\n    }\n  };\n  return (\n    <CalculatorApp>\n      <Calculator>\n        <SelectCalculate>\n          <li>\n            <SelectInput\n              type=\"button\"\n              name=\"immovables\"\n              onClick={e =>\n                setValues({\n                  ...values,\n                  immovables: true,\n                  credit: false,\n                  income: false,\n                  startAmount: IMMOVABLES_START_LIMITS,\n                  endAmount: IMMOVABLES_END_LIMITS\n                })\n              }\n              value=\"По стоимости недвижимости\"\n            />\n          </li>\n          <li>\n            <SelectInput\n              type=\"button\"\n              name=\"credit\"\n              onClick={e =>\n                setValues({\n                  ...values,\n                  immovables: false,\n                  credit: true,\n                  income: false,\n                  startAmount: CREDIT_START_LIMITS,\n                  endAmount: CREDIT_END_LIMITS\n                })\n              }\n              value=\"По сумме кредита\"\n            />\n          </li>\n          <li>\n            <SelectInput\n              onClick={e =>\n                setValues({\n                  ...values,\n                  immovables: false,\n                  credit: false,\n                  income: true,\n                  startAmount: INCOME_START_LIMITS,\n                  endAmount: INCOME_END_LIMITS\n                })\n              }\n              type=\"button\"\n              value=\"По размеру дохода\"\n            />\n          </li>\n        </SelectCalculate>\n        <InputTitle>\n          <PaymentTitle credit={values.credit} immovables={values.immovables} />\n        </InputTitle>\n        <WrapperInput>\n          <InputRange\n            maxValue={values.endAmount}\n            minValue={values.startAmount}\n            formatLabel={value => `${value.toLocaleString()}`}\n            value={values.amount}\n            step={100000}\n            name=\"amount\"\n            onChangeComplete={rangeLimits}\n            onChange={value => handleRangeChange(\"amount\", value)}\n          />\n\n          <PaymentInput\n            value={values.amount.toLocaleString()}\n            type=\"text\"\n            name=\"amount\"\n            onChange={e => handleInputChange(e)}\n          />\n        </WrapperInput>\n        <InputTitle>Первоначальный взнос</InputTitle>\n        <WrapperInput>\n          <InputRange\n            maxValue={endPayment}\n            minValue={startPayment}\n            formatLabel={value => `${value.toLocaleString()}`}\n            value={payment}\n            step={10000}\n            onChangeComplete={resultCalculate}\n            onChange={value => handleRangeChange(\"payment\", value)}\n          />\n          <PaymentInput\n            name=\"payment\"\n            value={payment.toLocaleString()}\n            type=\"text\"\n            onChange={e => handleInputChange(e)}\n          />\n        </WrapperInput>\n        <InputTitle>Процентная ставка</InputTitle>\n        <WrapperInput>\n          <InputRange\n            maxValue={25}\n            minValue={9}\n            value={values.percent}\n            onChangeComplete={resultCalculate}\n            onChange={value => handleRangeChange(\"percent\", value)}\n          />\n          <PaymentInput\n            value={values.percent}\n            type=\"text\"\n            name=\"percent\"\n            style={{ width: \"61px\" }}\n            onChange={e => handleInputChange(e)}\n          />\n        </WrapperInput>\n        <InputTitle>Срок кредита</InputTitle>\n        <WrapperInput>\n          <InputRange\n            maxValue={endTime}\n            minValue={startTime}\n            step={1}\n            value={values.time}\n            onChangeComplete={resultCalculate}\n            onChange={value => handleRangeChange(\"time\", value)}\n          />\n          <PaymentInput\n            value={values.time}\n            type=\"text\"\n            name=\"time\"\n            style={{ width: \"61px\", marginLeft: \"0px\" }}\n            onChange={e => handleInputChange(e)}\n          />\n          <WrapperSelect>\n            <li>\n              <SelectTime\n                id=\"one\"\n                value=\"year\"\n                checked={values.year}\n                onChange={e => handleInputChange(e)}\n                type=\"radio\"\n              />\n              <label htmlFor=\"one\">лет</label>\n            </li>\n            <li>\n              <SelectTime\n                id=\"two\"\n                value=\"month\"\n                checked={values.month}\n                onChange={e => handleInputChange(e)}\n                type=\"radio\"\n              />\n              <label htmlFor=\"two\">месяцев</label>\n            </li>\n          </WrapperSelect>\n        </WrapperInput>\n      </Calculator>\n      <Result>\n        <ResultTitle>Ежемесячный платеж</ResultTitle>\n        <ResultParagraph style={{ fontWeight: \"600\", color: \"black\" }}>\n          {values.resultPayment.toLocaleString()} руб.\n        </ResultParagraph>\n        <ResultTitle>Размер кредита</ResultTitle>\n        <ResultParagraph>\n          {values.loanAmount.toLocaleString()} руб.\n        </ResultParagraph>\n        <ResultTitle>Сумма выплат по кредиту</ResultTitle>\n        <ResultParagraph>\n          {values.repaymentAmount.toLocaleString()} руб.\n        </ResultParagraph>\n        <ResultTitle>Стоимость недвижимости</ResultTitle>\n        <ResultParagraph>{values.amount.toLocaleString()} руб.</ResultParagraph>\n        <ResultTitle>Срок выплат</ResultTitle>\n        <ResultParagraph>\n          {values.year === true ? values.time : Math.ceil(values.time / 12)} лет\n        </ResultParagraph>\n        <ResultTitle>Необходимый ежемесячный доход</ResultTitle>\n        <ResultParagraph>{values.earn.toLocaleString()} руб.</ResultParagraph>\n      </Result>\n    </CalculatorApp>\n  );\n}\n\nexport default App;\n\nconst CalculatorApp = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nconst Calculator = styled.div`\n  font-size: 17px;\n  font-family: \"Nunito\", sans-serif;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  text-align: left;\n  flex-wrap: wrap;\n  flex: 99;\n  width: 70%;\n  height: 540px;\n  background: #f0f8fb;\n  order: 1;\n`;\n\nconst PaymentInput = styled.input`\n  width: 15%;\n  min-height: 35px;\n  max-height: 35px;\n  border: 1px solid #1abc9c;\n  margin-left: 30px;\n  text-align: right;\n  border-radius: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  padding-right: 12px;\n`;\n\nconst WrapperInput = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  margin-top: 30px;\n  padding-left: 15px;\n  width: 100%;\n`;\n\nconst InputTitle = styled.label`\n  font-size: 18px;\n  padding-left: 15px;\n`;\n\nconst Result = styled.div`\n  display: flex;\n  min-width: 30%;\n  background: #fefdf0;\n  order: 2;\n  flex-direction: column;\n  flex: 1 0 300px;\n`;\n\nconst ResultTitle = styled.p`\n  font-size: 18px;\n  color: #666;\n  padding-left: 20px;\n`;\n\nconst ResultParagraph = styled.p`\n  font-size: 22px;\n  font-weight: bold;\n  color: #666;\n  padding-left: 20px;\n  margin-top: auto;\n`;\n\nconst SelectTime = styled.input`\n  border: 1px solid #1abc9c;\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  margin-left: -50px;\n`;\n\nconst WrapperSelect = styled.ul`\n  margin-top: -10px;\n  list-style-type: none;\n`;\n\nconst SelectCalculate = styled.ul`\n  font-size: 16px;\n  display: inline-flex;\n  flex-wrap: wrap\n  width: 100%;\n  list-style-type: none;\n`;\n\nconst SelectInput = styled.input`\n  border: 1px solid #1abc9c;\n  height: 36px;\n  background-color: #fff;\n  padding: 10px;\n  cursor: pointer;\n\n  &:focus {\n    background-color: #1abc9c;\n    color: white;\n  }\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}